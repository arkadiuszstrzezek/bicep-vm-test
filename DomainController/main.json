{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.36.177.2456",
      "templateHash": "5973300752803382397"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "adminUsername": {
      "type": "string"
    },
    "adminPassword": {
      "type": "securestring"
    },
    "domainName": {
      "type": "string",
      "defaultValue": "contoso.com"
    },
    "safeModePassword": {
      "type": "securestring"
    }
  },
  "resources": [
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2022-01-01",
      "name": "vnet-ad",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.0.0.0/16"
          ]
        },
        "subnets": [
          {
            "name": "subnet-ad",
            "properties": {
              "addressPrefix": "10.0.0.0/24"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2022-01-01",
      "name": "pip-ad-vm",
      "location": "[parameters('location')]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2022-01-01",
      "name": "nic-ad-vm",
      "location": "[parameters('location')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', 'pip-ad-vm')]"
              },
              "subnet": {
                "id": "[reference(resourceId('Microsoft.Network/virtualNetworks', 'vnet-ad'), '2022-01-01').subnets[0].id]"
              }
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', 'pip-ad-vm')]",
        "[resourceId('Microsoft.Network/virtualNetworks', 'vnet-ad')]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2022-11-01",
      "name": "ad-vm",
      "location": "[parameters('location')]",
      "properties": {
        "hardwareProfile": {
          "vmSize": "Standard_B2ms"
        },
        "osProfile": {
          "computerName": "ad-vm",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2019-Datacenter",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', 'nic-ad-vm')]"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', 'nic-ad-vm')]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "apiVersion": "2022-11-01",
      "name": "ad-vm/Install-ADDS",
      "location": "[parameters('location')]",
      "properties": {
        "publisher": "Microsoft.Compute",
        "type": "CustomScriptExtension",
        "typeHandlerVersion": "1.10",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -Command \"', '        Install-WindowsFeature AD-Domain-Services -IncludeManagementTools;\r\n        Import-Module ADDSDeployment;\r\n        Install-ADDSForest -DomainName ', parameters('domainName'), ' -SafeModeAdministratorPassword (ConvertTo-SecureString ', parameters('safeModePassword'), ' -AsPlainText -Force) -Force;\r\n\r\n        # Validation\r\n        if ((Get-WindowsFeature AD-Domain-Services).InstallState -eq \"Installed\") {\r\n            Write-Output \"AD DS role installed.\";\r\n        } else {\r\n            Write-Output \"ERROR: AD DS role NOT installed.\";\r\n            exit 1;\r\n        }\r\n\r\n        try {\r\n            $domain = Get-ADDomain;\r\n            Write-Output \"Domain promotion succeeded. Domain: $($domain.Name)\";\r\n        }\r\n        catch {\r\n            Write-Output \"ERROR: Domain promotion FAILED.\";\r\n            exit 1;\r\n        }\r\n      ', '\"')]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', 'ad-vm')]"
      ]
    }
  ]
}